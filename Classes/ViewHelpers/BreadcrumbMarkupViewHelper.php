<?php
declare(strict_types=1);

namespace Brotkrueml\Sdbreadcrumb\ViewHelpers;

/*
 * This file is part of the "sdbreadcrumb" extension for TYPO3 CMS.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 */

use TYPO3\CMS\Core\Utility\GeneralUtility;
use TYPO3Fluid\Fluid\Core\Rendering\RenderingContextInterface;
use TYPO3Fluid\Fluid\Core\ViewHelper;

/**
 * ViewHelper to render breadcrumb markup in JSON-LD format
 *
 * The result of the MenuProcessor (special = breadcrumb) can be
 * given to the view helper:
 *
 * <code title="Configuring the MenuProcessor in TypoScript">
 * page.10 = FLUIDTEMPLATE
 * page.10 {
 *   // ... Your other configuration
 *
 *   dataProcessing {
 *     10 = TYPO3\CMS\Frontend\DataProcessing\MenuProcessor
 *     10 {
 *       special = rootline
 *       as = breadcrumb
 *     }
 *   }
 * }
 * </code>
 *
 * As default the first entry (which is mostly the start page)
 * is stripped from the structured data because it is not necessary.
 * But you can include it setting the attribute stripFirstItem="0".
 *
 * = Examples =
 * <code title="Render structured data without the start page">
 * <sdb:breadcrumbMarkup breadcrumb="{breadcrumb}">
 * </code>
 * <output>
 * <script type="application/ld+json">... The output according to the breadcrumb in JSON format ...</script>
 * </output>
 *
 * <code title="Render structured data with all items given">
 * <sdb:breadcrumbMarkup breadcrumb="{breadcrumb}" stripFirstItem="0">
 * </code>
 */
class BreadcrumbMarkupViewHelper extends ViewHelper\AbstractViewHelper
{
    protected $escapeOutput = false;

    public function initializeArguments()
    {
        parent::initializeArguments();

        $this->registerArgument(
            'breadcrumb',
            'array',
            'The breadcrumb generated by the MenuProcessor or an equivalent data structure',
            true
        );

        $this->registerArgument(
            'stripFirstItem',
            'bool',
            'Strips off the first item of the breadcrumb, normally the start page',
            false,
            true
        );
    }

    public static function renderStatic(
        array $arguments,
        \Closure $renderChildrenClosure,
        RenderingContextInterface $renderingContext
    ): string {
        $breadcrumb = $arguments['breadcrumb'];

        if ($arguments['stripFirstItem']) {
            $breadcrumb = array_slice($breadcrumb, 1);
        }

        if (!count($breadcrumb)) {
            return '';
        }

        return '<script type="application/ld+json">'
            . json_encode(static::generateMarkup($breadcrumb), JSON_UNESCAPED_SLASHES)
            . '</script>';
    }

    /**
     * @param array $breadcrumb
     * @return array
     */
    protected static function generateMarkup(array $breadcrumb): array
    {
        $siteUrl = GeneralUtility::getIndpEnv('TYPO3_SITE_URL');
        if ($breadcrumb[0]['link'][0] === '/') {
            $siteUrl = rtrim($siteUrl, '/');
        }

        $markup = [
            '@context' => 'http://schema.org',
            '@type' => 'BreadcrumbList',
            'itemListElement' => [],
        ];

        foreach ($breadcrumb as $index => $item) {
            $markup['itemListElement'][] = [
                '@type' => 'ListItem',
                'position' => $index + 1,
                'item' => [
                    '@type' => 'WebPage',
                    '@id' => $siteUrl . $item['link'],
                    'name' => $item['title'],
                ],
            ];
        }

        return $markup;
    }
}
